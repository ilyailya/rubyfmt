#!/bin/bash
set -euxo pipefail

TAG=$(git describe --all --exact-match HEAD)
RELEASE_DIR=${RELEASE_DIR:-"tmp/releases/${TAG}-$(uname -s)/"}

# ./script/test.sh
rm -rf "${RELEASE_DIR}"

mkdir -p "${RELEASE_DIR}"
mkdir -p "${RELEASE_DIR}/lib/"
mkdir -p "${RELEASE_DIR}/include/"

cargo build --release

cp target/release/rubyfmt-main "${RELEASE_DIR}/rubyfmt"
pwd
pwd
# shellcheck disable=2012
RELEASE_LIB=$(find target/release/ | grep -i 'librubyfmt-.*\.a$')
cp "$RELEASE_LIB" "${RELEASE_DIR}/lib/librubyfmt.a"
pwd
# shellcheck disable=2012
pwd
cp librubyfmt/include/rubyfmt.h "${RELEASE_DIR}/include/rubyfmt.h"
pwd
cp RELEASE_README.md "${RELEASE_DIR}/RELEASE_README"

# check the binary
RES=$(echo 'a(1)' | "${RELEASE_DIR}/rubyfmt")
if [ "$RES" != "a(1)" ]; then
    echo "formatting failed"
    exit 1
fi

echo "RELEASE DIR: $RELEASE_DIR"
ls "$RELEASE_DIR"

# [c]reate a g[z]ipped archive and write it to a [f]ile [v]erbosely
tar cvf "rubyfmt-${TAG}-$(uname -s).tar.gz" "${RELEASE_DIR}"
